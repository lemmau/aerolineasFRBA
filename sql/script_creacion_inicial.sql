/* --		Son un total de 19 tablas
DROP TABLE [HAY_TABLA].VIAJE
DROP TABLE [HAY_TABLA].AERONAVE
DROP TABLE [HAY_TABLA].USUARIO
DROP TABLE [HAY_TABLA].CANJE
DROP TABLE [HAY_TABLA].CLIENTE
DROP TABLE [HAY_TABLA].CIUDAD
DROP TABLE [HAY_TABLA].RUTA
DROP TABLE [HAY_TABLA].SERVICIO
DROP TABLE [HAY_TABLA].BUTACA
DROP TABLE [HAY_TABLA].DEVOLUCION
DROP TABLE [HAY_TABLA].PASAJE
DROP TABLE [HAY_TABLA].COMPRA
DROP TABLE [HAY_TABLA].ENCOMIENDA
DROP TABLE [HAY_TABLA].TARJETA
DROP TABLE [HAY_TABLA].TIPOTARJETA
DROP TABLE [HAY_TABLA].PRODUCTO
DROP TABLE [HAY_TABLA].ROL
DROP TABLE [HAY_TABLA].FUNCIONALIDAD_ROL
DROP TABLE [HAY_TABLA].FUNCIONALIDAD
DROP SCHEMA [HAY_TABLA]
*/

USE [GD2C2015]

GO

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name='HAY_TABLA')
BEGIN
    -- The schema must be run in its own batch!
	EXEC ('CREATE SCHEMA [HAY_TABLA]')
END
GO

print 'Inicio de Instrucciones DDL.'

CREATE TABLE [HAY_TABLA].ROL
(
ID			INT IDENTITY(1,1) NOT NULL,
NOMBRE		VARCHAR(50) NOT NULL,
STATUS		BIT NOT NULL DEFAULT 1,	-- todos activos por default

PRIMARY KEY (ID)
);
GO

CREATE TABLE [HAY_TABLA].FUNCIONALIDAD (
ID 			INT IDENTITY(1,1) NOT NULL,
NOMBRE		VARCHAR(50),

PRIMARY KEY (ID)
);
GO

CREATE TABLE [HAY_TABLA].FUNCIONALIDAD_ROL (
ID_FUNCIONALIDAD	INT NOT NULL,
ID_ROL				INT NOT NULL,

PRIMARY KEY (ID_FUNCIONALIDAD, ID_ROL),
FOREIGN KEY (ID_FUNCIONALIDAD) REFERENCES [HAY_TABLA].FUNCIONALIDAD,
FOREIGN KEY (ID_ROL) REFERENCES [HAY_TABLA].ROL,
);
GO

CREATE TABLE [HAY_TABLA].USUARIO (
ID 					INT IDENTITY(1,1) NOT NULL,
ID_ROL				INT NOT NULL,
USERNAME			NVARCHAR(255) UNIQUE NOT NULL,
PASSWORD			NVARCHAR(255),	-- mediante encriptacion SHA256
INTENTOSFALLIDOS	INT NOT NULL DEFAULT 0,	-- al llegar a 3 se pone STATUS en 0
STATUS				BIT NOT NULL DEFAULT 1,

PRIMARY KEY (ID),
FOREIGN KEY (ID_ROL) REFERENCES [HAY_TABLA].ROL
);
GO

CREATE TABLE [HAY_TABLA].CLIENTE (
ID 					INT IDENTITY(1,1) NOT NULL,
ID_ROL				INT NOT NULL,
DNI 				INT UNIQUE NOT NULL,
NOMBRE				VARCHAR(255),
APELLIDO			VARCHAR(255),
DIRECCION			VARCHAR(255),
TELEFONO			VARCHAR(255),
MAIL 				VARCHAR(255),
FECHANACIMIENTO		DATETIME,

PRIMARY KEY (ID),
FOREIGN KEY (ID_ROL) REFERENCES [HAY_TABLA].ROL
);
GO

CREATE TABLE [HAY_TABLA].PRODUCTO (
ID 					INT IDENTITY(1,1) NOT NULL,
DESCRIPCION			VARCHAR(255) NOT NULL,
CANTSTOCK			INT NOT NULL,
MILLASNECESARIAS	INT NOT NULL,

PRIMARY KEY (ID),
);
GO

CREATE TABLE [HAY_TABLA].CANJE (
ID 					INT IDENTITY(1,1) NOT NULL,
ID_PRODUCTO			INT NOT NULL,
ID_CLIENTE			INT NOT NULL,
DNI					INT NOT NULL,
CANTIDAD			INT NOT NULL,
FECHA				DATETIME NOT NULL,

PRIMARY KEY (ID),
FOREIGN KEY (ID_PRODUCTO) REFERENCES [HAY_TABLA].PRODUCTO,
FOREIGN KEY (ID_CLIENTE) REFERENCES [HAY_TABLA].CLIENTE
);
GO

CREATE TABLE [HAY_TABLA].CIUDAD (
ID 			INT	IDENTITY(1,1) NOT NULL,
NOMBRE		VARCHAR(255) NOT NULL,
STATUS		BIT NOT NULL DEFAULT 1,	-- 0 cuando es BAJA

PRIMARY KEY (ID)
);
GO

CREATE TABLE [HAY_TABLA].SERVICIO (
ID 						INT	IDENTITY(1,1) NOT NULL,
TIPOSERVICIO			VARCHAR(255) NOT NULL,
PORCENTAJEADICIONAL		INT NOT NULL,

PRIMARY KEY (ID)
);
GO

CREATE TABLE [HAY_TABLA].RUTA (
ID 					INT IDENTITY(1,1) NOT NULL,
CODIGO 				INT UNIQUE NOT NULL,
ID_CDADORIGEN		INT NOT NULL,
ID_CDADDESTINO		INT NOT NULL,
ID_SERVICIO			INT NOT NULL,
PRECIOBASEPASAJE 	INT NOT NULL,
PRECIOBASEKG 		INT NOT NULL,
STATUS				BIT NOT NULL DEFAULT 1,	-- 0 cuando es BAJA

PRIMARY KEY (ID),
FOREIGN KEY (ID_CDADORIGEN) REFERENCES [HAY_TABLA].CIUDAD,
FOREIGN KEY (ID_CDADDESTINO) REFERENCES [HAY_TABLA].CIUDAD,
FOREIGN KEY (ID_SERVICIO) REFERENCES [HAY_TABLA].SERVICIO
);
GO

CREATE TABLE [HAY_TABLA].AERONAVE (
ID 						INT IDENTITY(1,1) NOT NULL,
NUMERO 					INT UNIQUE NOT NULL,
ID_SERVICIO				INT NOT NULL,
MODELO					VARCHAR(255) NOT NULL,
MATRICULA				VARCHAR(255) NOT NULL,
FABRICANTE				VARCHAR(255) NOT NULL,
CANTBUTACAS				INT NOT NULL,
ESPACIOKGENCOMIENDAS	INT NOT NULL,
BAJAFUERASERVICIO		BIT NOT NULL,
FECHAFUERASERVICIO		DATETIME,
FECHAALTA				DATETIME NOT NULL,
BAJAVIDAUTIL			BIT NOT NULL,
FECHABAJADEFINITIVA 	DATETIME,

PRIMARY KEY (ID),
FOREIGN KEY (ID_SERVICIO) REFERENCES [HAY_TABLA].SERVICIO
);
GO

CREATE TABLE [HAY_TABLA].BUTACA (
ID 						INT	IDENTITY(1,1) NOT NULL,
ID_AERONAVE				INT NOT NULL,
TIPO 					VARCHAR(255) NOT NULL,
PISO					BIT NOT NULL, -- puede ser 0 o 1, no hay otra!!
STATUS					BIT NOT NULL DEFAULT 0,	-- butaca free

PRIMARY KEY (ID),
FOREIGN KEY (ID_AERONAVE) REFERENCES [HAY_TABLA].AERONAVE
);
GO

CREATE TABLE [HAY_TABLA].VIAJE (
ID 						INT IDENTITY(1,1) NOT NULL,
NUMEROAERONAVE			INT NOT NULL,
CODIGORUTA 				INT NOT NULL,
FECHASALIDA 			DATETIME NOT NULL,
FECHALLEGADA 			DATETIME NOT NULL,
FECHALLEGADAESTIMADA 	DATETIME NOT NULL,

PRIMARY KEY (ID)
);
GO

CREATE TABLE [HAY_TABLA].TIPOTARJETA
(
ID					INT IDENTITY(1,1) NOT NULL,
DESCRIPCION			VARCHAR(50) NOT NULL,
CANTCUOTAS 			INT NOT NULL,

PRIMARY KEY (ID)
);
GO

CREATE TABLE [HAY_TABLA].TARJETA
(
ID					INT IDENTITY(1,1) NOT NULL,
ID_TIPOTARJETA 		INT NOT NULL,
NUMERO				INT NOT NULL,
CLAVE				INT NOT NULL,
FECHAVTO			DATETIME NOT NULL,

PRIMARY KEY (ID),
FOREIGN KEY(ID_TIPOTARJETA) REFERENCES [HAY_TABLA].TIPOTARJETA
);
GO

CREATE TABLE [HAY_TABLA].COMPRA (
ID 						INT IDENTITY(1,1) NOT NULL,
NUMEROCOMPRA 			INT NOT NULL,
ID_CLIENTE				INT NOT NULL,
ID_TARJETA				INT NOT NULL,
ID_VIAJE				INT NOT NULL,
FECHA 					DATETIME NOT NULL,
IMPORTE 				INT NOT NULL,

PRIMARY KEY (ID),
FOREIGN KEY (ID_CLIENTE) REFERENCES [HAY_TABLA].CLIENTE,
FOREIGN KEY (ID_TARJETA) REFERENCES [HAY_TABLA].TARJETA,
FOREIGN KEY (ID_VIAJE) REFERENCES [HAY_TABLA].VIAJE
);
GO

CREATE TABLE [HAY_TABLA].ENCOMIENDA (
ID 						INT IDENTITY(1,1) NOT NULL,
NUMERO 					INT NOT NULL,
CODIGORUTA				INT NOT NULL,
ID_CLIENTE				INT NOT NULL,
ID_COMPRA				INT NOT NULL,
FECHA 					DATETIME NOT NULL,
PESO 					INT NOT NULL,
	
PRIMARY KEY (ID),
FOREIGN KEY (ID_CLIENTE) REFERENCES [HAY_TABLA].CLIENTE,
FOREIGN KEY (ID_COMPRA) REFERENCES [HAY_TABLA].COMPRA
);
GO

CREATE TABLE [HAY_TABLA].PASAJE (
ID 						INT IDENTITY(1,1) NOT NULL,
NUMERO 					INT NOT NULL,
NUMEROCOMPRA			INT NOT NULL,
ID_CLIENTE				INT NOT NULL,
ID_TARJETA				INT NOT NULL,
ID_VIAJE				INT NOT NULL,
FECHA 					DATETIME NOT NULL,
IMPORTE 				INT NOT NULL,

PRIMARY KEY (ID),
FOREIGN KEY (ID_CLIENTE) REFERENCES [HAY_TABLA].CLIENTE,
FOREIGN KEY (ID_TARJETA) REFERENCES [HAY_TABLA].TARJETA,
FOREIGN KEY (ID_VIAJE) REFERENCES [HAY_TABLA].VIAJE
);
GO

CREATE TABLE [HAY_TABLA].DEVOLUCION (
ID 						INT IDENTITY(1,1) NOT NULL,
NUMEROCOMPRA 			INT NOT NULL,
ID_PASAJE				INT NOT NULL,
ID_ENCOMIENDA			INT NOT NULL,
FECHA 					DATETIME NOT NULL,
MOTIVOCANCELACION 		VARCHAR(255) NOT NULL,

PRIMARY KEY (ID),
FOREIGN KEY (ID_PASAJE) REFERENCES [HAY_TABLA].PASAJE,
FOREIGN KEY (ID_ENCOMIENDA) REFERENCES [HAY_TABLA].ENCOMIENDA
);
GO

print 'Fin de Instrucciones DDL.'
/*************************************************** INSERTS ******************************************************/

SET IDENTITY_INSERT [HAY_TABLA].ROL ON
	INSERT INTO [HAY_TABLA].ROL (ID, NOMBRE) VALUES(1,'Administrativo')
	INSERT INTO [HAY_TABLA].ROL (ID, NOMBRE) VALUES(2,'Cliente')
SET IDENTITY_INSERT [HAY_TABLA].ROL OFF

-- Son 13 las FUNCIONALIDAD
SET IDENTITY_INSERT [HAY_TABLA].FUNCIONALIDAD ON
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(1,'LOGIN');
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(2,'ABM. DE ROL');
	-- "Registro de Usuario" y "ABM de Ciudad" 	(SE DECIDIÓ POR NO HACER (segun la cátedra !!!)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(3,'ABM. DE RUTA AEREA');
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(4,'ABM. DE AERONAVE');
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(5,'GENERACION DE VIAJE');
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(6,'REGISTRO DE LLEGADA A DESTINO');
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(7,'COMPRA DE PASAJE/ENCOMIENDA');
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(8,'DEVOLUCION/CANCELACION DE PASAJE/ENCOMIENDA');
	-- VER si estos pueden ser 2 en 1:
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(9,'CONSULTA DE MILLAS');
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(10,'CANJE DE MILLAS');

	INSERT INTO [HAY_TABLA].FUNCIONALIDAD (ID, NOMBRE) VALUES(11,'LISTADO ESTADISTICO');
SET IDENTITY_INSERT [HAY_TABLA].FUNCIONALIDAD OFF

----------------------------------------------------
-- FUNCIONALIDAD disponibles para c/u de los ROL
----------------------------------------------------
	--Administrativos
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,1)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,2)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,3)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,4)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,5)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,6)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,7)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,8)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,9)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,10)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (1,11)
	--Clientes
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (2,7)
	INSERT INTO [HAY_TABLA].FUNCIONALIDAD_ROL (ID_ROL,ID_FUNCIONALIDAD) VALUES (2,9)
------------------------------------------------------
--- user ADMIN
------------------------------------------------------

INSERT INTO [HAY_TABLA].USUARIO
(ID_ROL, USERNAME, PASSWORD, INTENTOSFALLIDOS, STATUS) VALUES
(1, N'admin01', N'e6b87050bfcb8143fcb8db0170a4dc9ed00d904ddd3e2a4ad1b1e8dc0fdc9be7', 0, 1)	-- password : 'w23e'
GO

INSERT INTO [HAY_TABLA].USUARIO
(ID_ROL, USERNAME, PASSWORD, INTENTOSFALLIDOS, STATUS) VALUES
(1, N'admin02', N'e6b87050bfcb8143fcb8db0170a4dc9ed00d904ddd3e2a4ad1b1e8dc0fdc9be7', 0, 1)	-- password : 'w23e'
GO

INSERT INTO [HAY_TABLA].USUARIO
(ID_ROL, USERNAME, PASSWORD, INTENTOSFALLIDOS, STATUS) VALUES
(1, N'admin03', N'e6b87050bfcb8143fcb8db0170a4dc9ed00d904ddd3e2a4ad1b1e8dc0fdc9be7', 0, 1)	-- password : 'w23e'
GO

